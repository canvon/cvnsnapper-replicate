#!/bin/bash

warn() {
	echo "${0##*/}: $*" >&2
}

die() {
	warn "Fatal: $*"
	exit 1
}


interpolate-into-infoxml() {
	perl -e '
		use strict; use warnings;

		my ($n, $date, $description) = @ARGV;

		sub replace_by_entity {
			my ($char) = @_;
			return "&amp;" if $char eq "&";
			return "&lt;"  if $char eq "<";
			return "&gt;"  if $char eq ">";
			return ("&#".ord($char).";");
		}

		print("<?xml version=\"1.0\"?>\n");
		print("<snapshot>\n");
		print("  <type>single</type>\n");
		print("  <num>$n</num>\n");
		print("  <date>$date</date>\n");
		print("  <uid>0</uid>\n");

		$description =~ s/([&<>])/replace_by_entity($1)/ge;
		print("  <description>$description</description>\n");

		print("</snapshot>\n");
	' "$@"
}


N=0
CREATE_IN_SNAPSHOTS_SUBVOL=

USAGE="Usage: $0 [--last-num=N] [--create-in-snapshots-subvol=DOT_SNAPSHOTS_SUBVOL] SUBVOL_NAME [...]"

# Parse options.
while [ "$#" -ge 1 ] && [ "${1:0:1}" = "-" ]
do
	case "$1" in
	--help|--usage)
		shift
		echo "$USAGE"
		exit 0
		;;
	--last-num=*)
		N="${1#--last-num=}"
		shift
		;;
	--create-in-snapshots-subvol=*)
		CREATE_IN_SNAPSHOTS_SUBVOL="${1#--create-in-snapshots-subvol=}"
		shift
		[ -d "$CREATE_IN_SNAPSHOTS_SUBVOL" ] || die "Cannot create in snapshots subvol \"$CREATE_IN_SNAPSHOTS_SUBVOL\": Not a directory"
		[ "$(stat --format=%i "$CREATE_IN_SNAPSHOTS_SUBVOL")" -eq 256 ] || die "Cannot create in snapshots subvol \"$CREATE_IN_SNAPSHOTS_SUBVOL\": Not a btrfs subvolume"
		;;
	*)
		die "Invalid option \"$1\""
		;;
	esac
done

[ "$#" -ge 1 ] || die "$USAGE"

# Parse rest of command line arguments as subvol names
# to decode & convert to snapper info.xml files.
for SUBVOL_NAME
do
	: $[N++]

	DID_IT=0
	FIELDS=$(sed -ne 's#^\(.*/\)\?\([^-@]\+[-@]\)\?\([:0-9]\+[-_][:0-9]\+\)-\(.*\)$#DATE=\3\nDESCRIPTION=\4#p' <<<"$SUBVOL_NAME") && DID_IT=1
	if [ "$DID_IT" -eq 0 ] || [ -z "$FIELDS" ]
	then
		die "Cannot parse subvol name into fields: \"$SUBVOL_NAME\""
	fi
	MANGLED_DATE=$(sed -ne 's/^DATE=//p' <<<"$FIELDS") || die "Field DATE missing in parse of subvol name \"$SUBVOL_NAME\""
	MANGLED_DESCRIPTION=$(sed -ne 's/^DESCRIPTION=//p' <<<"$FIELDS") || die "Field DESCRIPTION missing in parse of subvol name \"$SUBVOL_NAME\""
	[ -n "$MANGLED_DATE" ] || die "Field DATE was empty in parse of subvol name \"$SUBVOL_NAME\""


	DEMANGLED_DATE=$(perl -pe 's/^(\d{4})(\d{2})(\d{2})[-_](\d{2})(\d{2})(\d{2})?$/$1-$2-$3 $4:$5:$6/; s/:$/:00/' <<<"$MANGLED_DATE") || die "Cannot demangle date \"$MANGLED_DATE\" for subvol name \"$SUBVOL_NAME\""
	[ -n "$DEMANGLED_DATE" ] || die "Demangled date was empty for subvol name \"$SUBVOL_NAME\""

	TS=$(date --date="$DEMANGLED_DATE" +%s) || die "Converting from demangled date \"$DEMANGLED_DATE\" to UNIX time failed"
	[ -n "$TS" ] || die "Conversion of demangled date \"$DEMANGLED_DATE\" to UNIX time was empty"

	OUT_DATE=$(date --date=@"$TS" --utc +'%F %T') || die "Converting from UNIX time \"$TS\" to output date failed"
	[ -n "$OUT_DATE" ] || die "Conversion of UNIX time \"$TS\" to output date was empty"


	# TODO: More demangling necessary? Or perhaps less?
	OUT_DESCRIPTION=$(sed -e 's/_/ /g' <<<"$MANGLED_DESCRIPTION")


	if [ -z "$CREATE_IN_SNAPSHOTS_SUBVOL" ]
	then
		interpolate-into-infoxml "$N" "$OUT_DATE" "$OUT_DESCRIPTION" || die "Interpolating collected data into info.xml format failed for subvol name \"$SUBVOL_NAME\""
	else
		OUT_DIR="$CREATE_IN_SNAPSHOTS_SUBVOL/$N"
		if ! [ -d "$OUT_DIR" ]
		then
			mkdir "$OUT_DIR" || die "Cannot create directory for snapper meta-data and read-only snapshot at \"$OUT_DIR\" for subvol name \"$SUBVOL_NAME\""
		fi

		OUT_INFO_XML="$OUT_DIR/info.xml"
		[ -e "$OUT_INFO_XML" ] && die "Output file \"$OUT_INFO_XML\" for snapper meta-data already exists (for subvol name \"$SUBVOL_NAME\")"

		# (umask: Try to make the created info.xml group-/world-inaccessible, like snapper does.)
		( umask 077; interpolate-into-infoxml "$N" "$OUT_DATE" "$OUT_DESCRIPTION" >"$OUT_INFO_XML" ) || die "Interpolating collected data into info.xml at \"$OUT_INFO_XML\" failed for subvol name \"$SUBVOL_NAME\""
	fi
done
